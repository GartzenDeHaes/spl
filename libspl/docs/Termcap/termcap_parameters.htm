<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0067)http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Parameters -->
<HTML><HEAD><TITLE>Info: (termcap) Parameters</TITLE>
<META http-equiv=Content-Type content="text/html; charset=iso-8859-1">
<META content="MSHTML 6.00.2900.2963" name=GENERATOR></HEAD>
<BODY>
<H1><EM>(termcap)</EM> Parameters</H1><A 
href="http://docs.biostat.wustl.edu/cgi-bin/infocat"><IMG height=22 
src="termcap_parameters_files/ball.red.gif" width=20 border=1> Info Catalog</A> 
<A href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Padding"><IMG 
height=22 src="termcap_parameters_files/left.gif" width=20 border=1> 
<EM>(termcap)</EM> <STRONG>Padding</STRONG> </A><A 
href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Library"><IMG 
height=22 src="termcap_parameters_files/up.gif" width=20 border=1> 
<EM>(termcap)</EM> <STRONG>Library</STRONG> </A><PRE> 
 Filling In Parameters
 =====================
 
 Some terminal control strings require numeric "parameters".  For
 example, when you move the cursor, you need to say what horizontal and
 vertical positions to move it to.  The value of the terminal's `cm'
 capability, which says how to move the cursor, cannot simply be a
 string of characters; it must say how to express the cursor position
 numbers and where to put them within the command.
 
    The specifications of termcap include conventions as to which
 string-valued capabilities require parameters, how many parameters, and
 what the parameters mean; for example, it defines the `cm' string to
 take two parameters, the vertical and horizontal positions, with 0,0
 being the upper left corner.  These conventions are described where the
 individual commands are documented.
 
    Termcap also defines a language used within the capability
 definition for specifying how and where to encode the parameters for
 output.  This language uses character sequences starting with `%'.
 (This is the same idea as `printf', but the details are different.)
 The language for parameter encoding is described in this section.
 
    A program that is doing display output calls the functions `tparam'
 or `tgoto' to encode parameters according to the specifications.  These
 functions produce a string containing the actual commands to be output
 (as well a padding spec which must be processed with `tputs'; <A href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Padding">
 Padding</A>).
 
</PRE>
<H3>Menu</H3><PRE> 
* <A href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Encode%2520Parameters">Encode Parameters</A>  The language for encoding parameters.
* <A href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Using%2520Parameters">Using Parameters</A>  Outputting a string command with parameters.
 
</PRE><A href="http://docs.biostat.wustl.edu/cgi-bin/infocat"><IMG height=22 
src="termcap_parameters_files/ball.red.gif" width=20 border=1> Info Catalog</A> 
<A href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Padding"><IMG 
height=22 src="termcap_parameters_files/left.gif" width=20 border=1> 
<EM>(termcap)</EM> <STRONG>Padding</STRONG> </A><A 
href="http://docs.biostat.wustl.edu/cgi-bin/info2html?(termcap)Library"><IMG 
height=22 src="termcap_parameters_files/up.gif" width=20 border=1> 
<EM>(termcap)</EM> <STRONG>Library</STRONG> </A>
<HR>
<EM>automatically generated by </EM><A 
href="http://www.cs.dartmouth.edu/~jonh/info2html/"><B>info2html</B></A> 
</BODY></HTML>
